#!/usr/bin/env bash

# A "cheap" pomodoro timer. It resets itself after the sequence has played.

set -e
[[ -z "${DEBUG}" ]] || set -x

SFX_PATH=/System/Library/Sounds/ # Sound effect path for OSX.
declare -a SEQUENCE
SEQUENCE=(Hero.aiff Blow.aiff Blow.aiff Blow.aiff Submarine.aiff)

usage() {
    echo "usage: $(basename "$0") integer  positive number, in seconds"
    exit 1
}

osx_check() {
    if [[ "$(uname -s)" != 'Darwin' ]]
    then
        printf "\n==> For use with Mac OS X\n"
        exit 1
    fi
}

check_input() {
    if [[ "${sleep_time}" -le 0 ]]
    then
        usage
    fi
}

play_sequence() {
    for i in "${SEQUENCE[@]}"
    do
        afplay -t "${duration}" "${SFX_PATH}${i}"
    done
}

sum_unit_time() {
    sum_time=$((sleep_time * loop_count))
}

output_trap() {
    sum_unit_time
    echo ""
    echo "==> Pomodoro units: ${loop_count} (total ${sum_time} seconds)"
}

# TODO: at end of the pomodoro period, ask what was achieved in the period
# TODO: at the end of the break period, ask what was done to recharge
# TODO: generate a report of the answers the user provided for historical purposes; output to text file

main() {
    local -i  loop_count
    loop_count=0
    local -i sleep_time
    sleep_time="$*" #1200 seconds == 20 minutes
    local -i sum_time
    local duration=0.7 # Length of time a sound should play.

    osx_check
    check_input
    echo "Starting at: $(date)"
    while true; do
        sleep "${sleep_time}";
        echo "Loop ending at: $(date)"
        play_sequence &
        loop_count+=1
        echo "Looped count: ${loop_count}"
        trap 'output_trap' SIGHUP SIGINT SIGQUIT SIGTERM
    done
}

main "$@"
